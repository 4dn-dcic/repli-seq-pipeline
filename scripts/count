#!/usr/bin/env bash

usage() {
  >&2 echo "Usage: $(basename $0) [-t threads ] -w windows.bed bed1 [bed2 ... bedN ]"
  >&2 echo ""
  exit 1
}

while getopts ":t:w:" opt; do
  case $opt in
  t)
    NTHREADS=$OPTARG
   ;;
  w)
    WINDOWBED=$OPTARG
   ;;
  \?)
   >&2 echo "Invalid option: -$OPTARG"
   usage
   ;;
  [?])
   usage
   ;;
  :)
   >&2 echo "Option -$OPTARG requires an argument."
   >&2 echo ""
   usage
   ;;
  esac
done

if [ -z $NTHREADS ]; then
  NTHREADS=1
fi

shift $((OPTIND-1))

if [[ $# -eq 0 ]] ; then
  >&2 echo 'no files given'
  exit 1
fi

if [[ -z $WINDOWBED ]] ; then
  >&2 echo 'window bed not provided'
  exit 1
fi

INPUT=$@

count(){
  INPUT=$1
  WINDOWBED=$2
  
  # check if file exists
  if [[ ! -f $INPUT ]]; then >&2 echo "file \"$INPUT\" not found"; exit 1; fi
  if [[ ! -f $WINDOWBED ]]; then >&2 echo "file \"$WINDOWBED\" not found"; exit 1; fi
  
  # check input is a bed
  if [[ $INPUT != *.bed ]]; then >&2 echo "input is not a bed file"; exit 1; fi
  if [[ $WINDOWBED != *.bed ]]; then >&2 echo "window file is not a bed file"; exit 1; fi
  
  BASE="$(basename $INPUT | sed 's/\.bed$//g')"
  WBASE="$(basename $WINDOWBED | sed 's/\.bed//g')"
  OUTPUT=${BASE}_${WBASE}.bg
  
  SCALE=$(echo "1000000/$(cat $INPUT | wc -l)" | bc -l)
  
  bedtools intersect -sorted -c -b $INPUT -a $WINDOWBED | \
  awk -v s=$SCALE '{print $1,$2,$3,$4*1000*(s/($3-$2)) }' OFS='\t' > $OUTPUT
  
  echo $OUTPUT
}

export -f count

parallel --will-cite -k -j $NTHREADS "count {} $WINDOWBED" ::: $INPUT




