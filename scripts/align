#!/usr/bin/env bash


usage() {
  echo "Usage: $(basename $0) [-t threads] -i bwaIndexPrefix|genome.fa fastq1 [fastq2 ... fastqN ]" 1>&2
  echo "" 1>&2
  echo "  bwaIndex can be a path to a bwa index prefix or a tarball of an bwa index" 1>&2
  echo "" 1>&2
  exit 1
}

################################
### PARSE COMMAND LINE ARGS ####
################################

while getopts ":i:t:" opt; do
  case $opt in
  t)
   NTHREADS=$OPTARG
   ;;
  i)
   INDEXFILE=$OPTARG
   ;;
  \?)
   echo "Invalid option: -$OPTARG" >&2
   usage
   ;;
  [?])
   usage
   ;;
  :)
   echo "Option -$OPTARG requires an argument." >&2
   echo "" >&2
   usage
   ;;
  esac
done

shift $((OPTIND-1))

if [ -z $NTHREADS ]; then
  if [ -z $NUMTHREADS ]; then
    NTHREADS=1
  else
    NTHREADS=$NUMTHREADS
  fi
fi

if [[ -z $INDEXFILE ]]; then
  echo "must define a path to a bwa index prefix or genome fasta with -i"
fi

if [[ -z $@ ]]; then
  INPUT=$(cat /dev/stdin)
else
  INPUT=$@
fi

index(){
  if [[ -f ${INDEXFILE}.bwt ]]; then
    INDEXPREFIX=$INDEXFILE
  elif [[ -f $INDEXFILE ]] && [[ $INDEXFILE == *.tar.gz ]]; then
    mkdir -p bwaIndex
    INDEXPATH=$(readlink -f $INDEXFILE)
    tar -C bwaIndex -x -f $INDEXPATH
    INDEXPREFIX=$(readlink -f bwaIndex/*.bwt | sed 's/\.bwt$//g')
  elif  [[ -f $INDEXFILE ]] && [[ $INDEXFILE == *.fa* ]]; then
    >&2 echo "fasta defined for index, making bwa index from fasta"
    mkdir -p bwaIndex
    INDEXFILE=$(readlink -f $INDEXFILE)
    (cd bwaIndex && bwa index -p genome $INDEXFILE 1>&2)
    INDEXPREFIX=$(readlink -f bwaIndex)/genome
  else
    >&2 echo "index not found"
    exit 1
  fi
  echo $INDEXPREFIX
}


align(){

  INPUT=$1
  INDEXFILE=$2
  NTHREADS=$3
  
   ISPAIRED=$(head -n 8 $INPUT | paste - - - - | awk '{print $1}' | uniq -c | awk '{print $1}' | head -n 1)
   if [[ $ISPAIRED -eq 2 ]]; then
     PAIRARG="-p"
     >&2 echo "fastq is interleaved, treating as paired-end"
   else
     PAIRARG=""
     >&2 echo "fastq is not interleaved, treating as single-end"
   fi
   
   # check if file exists
   if [[ ! -f $INPUT ]]; then echo "fastq file \"$INPUT\" not found"; exit 1; fi
   # check input is a fastq
   if [[ $INPUT != *.fastq ]] && [[ $INPUT != *.fq ]]; then echo "input is not an uncompressed fastq"; exit 1; fi
   
   BASE="$(basename $INPUT | sed 's/\.fq$//g' | sed 's/\.fastq$//g')"
   OUTPUT=${BASE}.bam
   LOGFILE=${OUTPUT}.log
   
   bwa mem $PAIRARG -v 2 -t $NTHREADS $INDEXFILE $INPUT | samtools view -Shb - > $OUTPUT
   echo $OUTPUT
   
}

export -f align
export -f index

INDEXPREFIX=$(index $INDEXFILE)
parallel --no-notice -k -j 1 "align {} $INDEXPREFIX $NTHREADS" ::: $INPUT
